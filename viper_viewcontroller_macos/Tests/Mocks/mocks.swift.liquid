//
//  {{ module_info.file_name }}
//  {{ module_info.project_name }}
//
//  Created by {{ developer.name }} on {{ date }}.
//  Copyright Â© {{ year }} {{ developer.company }}. All rights reserved.
//

import Foundation
import AppKit
import XCTest
@testable import {{ module_info.project_name }}

// MARK: - PresenterMock

class {{ module_info.name }}PresenterMock: {{ module_info.name }}PresenterProtocol, {{ module_info.name }}InteractorOutputProtocol {
    
    // MARK: - Properties
    
    var viewController: {{ module_info.name }}ViewControllerProtocol?
    var interactor: {{ module_info.name }}InteractorInputProtocol?
    var wireframe: {{ module_info.name }}WireframeProtocol?
    
    func viewDidLoad() { 
    }

    // MARK: - {{ module_info.name }}InteractorOutputProtocol

}

// MARK: - InteractorMock

class {{ module_info.name }}InteractorMock: {{ module_info.name }}InteractorInputProtocol, {{ module_info.name }}RemoteDataManagerOutputProtocol, {{ module_info.name }}LocalDataManagerOutputProtocol {
    
    // MARK: - Properties
    
    weak var presenter: {{ module_info.name }}InteractorOutputProtocol?
    var localDataManager: {{ module_info.name }}LocalDataManagerInputProtocol?
    var remoteDataManager: {{ module_info.name }}RemoteDataManagerInputProtocol?
    
    // MARK: - {{ module_info.name }}RemoteDataManagerOuputProtocol    

    // MARK: - {{ module_info.name }}LocalDataManagerOutputProtocol    

}

// MARK: - WindowControllerMock

class {{ module_info.name }}ControllerMock: BaseViewController<{{ module_info.name }}View>, {{ module_info.name }}ViewControllerProtocol {
    
    // MARK: - Properties
    
    weak var presenter: {{ module_info.name }}PresenterProtocol?
    
    // MARK: - NSViewController

    override init?(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?) {
        super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
    }

    required public init?(coder aDecoder: NSCoder) {
        fatalError("init(coder:) has not been implemented")
    }

    override func viewDidLoad() {
        super.viewDidLoad()
    }
    
    // MARK: - {{ module_info.name }}ViewProtocol

}

// MARK: - WireframeMock

class {{ module_info.name }}WireframeMock: {{ module_info.name }}WireframeProtocol {
    
    class func create{{ module_info.name }}Module() -> {{ module_info.name }}PresenterProtocol {
        return {{ module_info.name }}Presenter()
    }
    
    /*
    func presentNextScreen(from view: NextViewProtocol) {
        let nextViewController = NextWireframe.createNextModule()
        
        if let sourceView = view as? NSViewController {
           sourceView.navigationController?.pushViewController(nextViewController, animated: true)
        }
    }
    */
}

// MARK: - LocalDataManagerMock

class {{ module_info.name }}LocalDataManagerMock: {{ module_info.name }}LocalDataManagerInputProtocol {

	weak var localRequestHandler: {{ module_info.name }}LocalDataManagerOutputProtocol?

    init() {}

    deinit {
        print("Deinit \(self)")
    }
}

// MARK: - RemoteDataManagerMock

class {{ module_info.name }}RemoteDataManagerMock: {{ module_info.name }}RemoteDataManagerInputProtocol {

    weak var remoteRequestHandler: {{ module_info.name }}RemoteDataManagerOutputProtocol?

    init() {}

   	deinit {
        print("Deinit \(self)")
    }
}
