//
//  {{ module_info.file_name }}
//  {{ module_info.project_name }}
//
//  Created by {{ developer.name }} on {{ date }}.
//  Copyright Â© {{ year }} {{ developer.company }}. All rights reserved.
//

import Foundation
import UIKit
import ReactiveCocoa
import ReactiveSwift

protocol {{ module_info.name }}ViewControllerDelegate: class {
    
}

class {{ module_info.name }}ViewController: BaseViewModelViewController<{{ module_info.name }}ViewModel, {{ module_info.name }}View>, UITableViewDataSource, UITableViewDelegate {

    // MARK: - Properties

    weak var delegate: {{ module_info.name }}ViewControllerDelegate?

    // MARK: - Initializers

    required init(viewModel: {{ module_info.name }}ViewModel) {
        super.init(viewModel: viewModel)
    }
    
    @available(*, unavailable)
    required public init?(coder aDecoder: NSCoder) {
        fatalError("init(coder:) has not been implemented")
    }
    
    override open func viewDidLoad() {
        super.viewDidLoad()

        self.rootView.tableView.delegate = self
        self.rootView.tableView.dataSource = self
    }

    override func setupBindings() {
        super.setupBindings()

        self.viewModel.viewState.producer.startWithValues { [weak self] viewState in
            self?.rootView.updateView(with: viewState)
        }

    }

    // MARK: - UITableViewDataSource
    
    func numberOfSections(in tableView: UITableView) -> Int {
        return self.viewModel.sections.value.count
    }
    
    func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
        return self.viewModel.sections.value[section].cells.count
    }
    
    func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {

        let cellType = self.viewModel.sections.value[indexPath.section].cells[indexPath.row]

        switch cellType {
            
            case .cellTypeOne/*(let viewModel)*/:
                // let cellOne = tableView.dequeueReusableCell(withIdentifier: CellOneTableViewCell.ReuseIdentifier, for: indexPath) as! CellOneTableViewCell
                // cellOne.configureWith(viewModel)
                // return cellOne
                return UITableViewCell()
        }

        return UITableViewCell()
    }

    // MARK: - UITableViewDelegate

    func tableView(_ tableView: UITableView, didSelectRowAt indexPath: IndexPath) {
         
    }

    // MARK: - Methods

}
