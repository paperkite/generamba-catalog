//
//  {{ module_info.file_name }}
//  {{ module_info.project_name }}
//
//  Created by {{ developer.name }} on {{ date }}.
//  Copyright Â© {{ year }} {{ developer.company }}. All rights reserved.
//

import Foundation
import UIKit

class {{ module_info.name }}ViewController: BaseViewController<{{ module_info.name }}View>, UITableViewDataSource, UITableViewDelegate {
    
    // MARK: - Properties
    
    var presenter: {{ module_info.name }}PresenterProtocol?
    
    // MARK: - UIViewController

    override init() {
        super.init()
    }
    
    required public init?(coder aDecoder: NSCoder) {
        fatalError("init(coder:) has not been implemented")
    }

    override func viewDidLoad() {
        super.viewDidLoad()

        self.rootView.tableView.dataSource = self
        self.rootView.tableView.delegate = self
        
        self.presenter?.viewDidLoad()
    }
    
    override func viewWillAppear(_ animated: Bool) {
        super.viewWillAppear(animated)
        
        self.presenter?.viewWillAppear()
    }

    // MARK: - UITableViewDataSource
    
    func numberOfSections(in tableView: UITableView) -> Int {
        return self.presenter?.numberOfSections(in: tableView) ?? 0
    }
    
    func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
        return self.presenter?.numberOfRowsInSection(in: tableView, section: section) ?? 0
    }
    
    func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
        
        guard let cellType = self.presenter?.cellTypeAt(indexPath) else { return UITableViewCell() }
        
        switch cellType {
            case .default:
                return UITableViewCell()
        }

    }
    
    // MARK: - UITableViewDelegate
    
    func tableView(_ tableView: UITableView, didSelectRowAt indexPath: IndexPath) {
        self.presenter?.didSelectRow(in: tableView, at: indexPath)
    }
}

// MARK: - {{ module_info.name }}ViewProtocol

extension {{ module_info.name }}ViewController: {{ module_info.name }}ViewControllerProtocol {
        
    func update(viewState: {{ module_info.name }}ViewState) {
        switch viewState {
            case .loading:
                self.rootView.tableView.isHidden = true
                self.rootView.activityIndicator.startAnimating()
            case .loaded:
                self.rootView.tableView.isHidden = false
                self.rootView.activityIndicator.stopAnimating()
            case .empty:
                self.rootView.tableView.isHidden = false
                self.rootView.activityIndicator.stopAnimating()
            case .error:
                self.rootView.tableView.isHidden = false
                self.rootView.activityIndicator.stopAnimating()
        }
    }
}